.gitignore 
node_modules,parcel-cache

// never touch node_modules and package-lock.json


" npm init -y "     to install npm for bundler (parcel,webpack)    

-                    we also have "yarn" as node package manager
-                    it will create "package.json"

" npm i/install -D parcel "
-                    parcel will be install on your device
-                    -D or --save-dev for dev dependencies


" npx parcel index.html "   ==>>index.html as entry point
-                            npx===npm for execute 
-                            just create development build and hosted on server



" npx parcel build index.html "   production build happen and store it on "dist" folder which will  
-                                be minified version of actual


!!!!!!  Transitive dependencies !!!!!!!    
means react is so fast becoz of virtual dom as well as it will use this bundlers as dependencies for minified and optmizated code and these dependencies uses another dependencies.


!!!!!!!!!!!!!!!!      what parcel do for us?       !!!!!!!!!!!!!!!!!!
create a server,HMR( Hot Module Replacement ),file watcher algorithm,
Bundler,minify,cleaning our code
dev & production build
image optimization,super fast build algo
Tree Shaking --->> Remove unwanted code (lib na amuk function j use karya to te j leva bakina naii)



!!!!!!!!!!!  browserlist !!!!!!!!!!
it will make compatible for old browser 
we have to write in package.json


!!!!!!!!!! <script  type="module" src="">  </script>  !!!!!!!!!!!!!!!!
- for importing react in code 




!!!!!!!!!!!!!!!!!!!!!!!!!!    babel    !!!!!!!!!!!!!!!!!!!!!1
- for polyfill 
- to make our code compatible with older version of browser 
- babel will create that code
- understate JSX


#####################   key in React  ##################################
always use in React as attribute , unique 
- check for Tree Shaking

~~~~~~~~~~~~~~~~~~~~~~~~~~~~  JSX ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
JSX  ==>>
-          ReactElement (React.createElement)
-                                            ==>> object 
-                                                           ==>> HTML (DOM)

-   it is interpreted using babel

-   it does Sanitization like below code if any 'a' execute on browser will lead to attack
-   const a= api.getData();




!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
SPA ----- Single Page Application


// Routing type
1)Server Side Routing
2)Client Side Routing




!!!!!!!!!!!!!!!!!!!!!!!!!!!   constructor    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Typically, in React constructors are only used for two purposes:
1) Initializing local state by assigning an object to this.state.
2) Binding event handler methods to an instance.


!!!!!!!!!!!!!!!!!!!!!!!!     portals      !!!!!!!!!!!!!!!!!!!!!!!!!!!!

A typical use case for portals is when a parent component has an overflow: hidden or z-index style, but you need the child to visually “break out” of its container. For example, dialogs, hovercards, and tooltips.



!!!!!!!!!!!!!!!!!!!!!!!!!!!        useEffect     !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
When Strict Mode is on, in development, React runs setup and cleanup one extra time before the actual setup.

The rule of thumb is that the user shouldn’t be able to distinguish between the setup being called once (as in production) and a "setup → cleanup → setup"sequence (as in development)

Earth:::::::  unmount logic pan sari rite lakho 




!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  Formik And Yup      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

field: An object containing onChange, onBlur, name, and value of the field (see FieldInputProps)
form: The Formik bag
meta: An object containing metadata (i.e. value, touched, error, and initialValue) about the field (see FieldMetaProps)




!!!!!!!!!!!!!!!!!!!!!!!!!    flex in css   !!!!!!!!!!!!!!!!!!!!!!!!!!
1) flex-wrap == main axis ni along wrap ==>> items ne width aapvi pade pachi khyal aavse
2) flex-direction === column,row,row-reverse
3) flex-flow=== direction flex-wrap
by default row nowrap

4) justify-content === main axis along contain set kare
-        like flex-start,flex-end,space-between

5) align-items  ==== cross axis along  

6) align-content === on the basis of no of rows or cols based on flex-direction it will do just like -                    justify content






!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  State vs  Props     !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
-  state variable will have scope as block
- while to pass a variable from one to another component we will be using Props 


// PROP DRILLING parent->child
// passing prop fro parent to child 
//down the chain passing data 



//child->parent
    -  localstorage
    -  customize hooks
    -  redux

